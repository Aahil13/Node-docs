import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as e}from"./app-Bas5zjDk.js";const t={},p=e(`<p>Updating existing records in a MySQL table is accomplished using the &quot;UPDATE&quot; statement. Let&#39;s see how to perform record updates in Node.js:</p><h3 id="updating-records-with-a-specific-condition" tabindex="-1"><a class="header-anchor" href="#updating-records-with-a-specific-condition"><span>Updating Records with a Specific Condition</span></a></h3><p>To update records that match a specific condition, you use the &quot;UPDATE&quot; statement with a &quot;WHERE&quot; clause. Here&#39;s an example where we update the address column from &quot;Valley 345&quot; to &quot;Canyon 123&quot;:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> mysql <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> con <span class="token operator">=</span> mysql<span class="token punctuation">.</span><span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">&quot;yourusername&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&quot;yourpassword&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">database</span><span class="token operator">:</span> <span class="token string">&quot;mydb&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

con<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
  <span class="token keyword">var</span> sql <span class="token operator">=</span> <span class="token string">&quot;UPDATE customers SET address = &#39;Canyon 123&#39; WHERE address = &#39;Valley 345&#39;&quot;</span><span class="token punctuation">;</span>
  con<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>affectedRows <span class="token operator">+</span> <span class="token string">&quot; record(s) updated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Save this script in a file named &quot;demo_db_update.js&quot; and execute it:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">node</span> demo_db_update.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You&#39;ll receive a message indicating the number of records updated, like this:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>1 record(s) updated
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="understanding-the-result-object" tabindex="-1"><a class="header-anchor" href="#understanding-the-result-object"><span>Understanding the Result Object</span></a></h3><p>When executing a query, a result object is returned. This object provides information about how the query affected the table. Here&#39;s an example of the result object:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">fieldCount</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">affectedRows</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">insertId</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">serverStatus</span><span class="token operator">:</span> <span class="token number">34</span><span class="token punctuation">,</span>
  <span class="token literal-property property">warningCount</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;(Rows matched: 1 Changed: 1 Warnings: 0)&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">protocol41</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">changedRows</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can access the values of the properties like this:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>affectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This will output:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>By using the &quot;UPDATE&quot; statement along with specific conditions in the &quot;WHERE&quot; clause, you can efficiently modify existing records in your MySQL tables using Node.js.</p></div>`,16),o=[p];function i(c,r){return s(),a("div",null,o)}const d=n(t,[["render",i],["__file","Update.html.vue"]]),k=JSON.parse(`{"path":"/docs/MySQL/Update.html","title":"Update","lang":"en-US","frontmatter":{"title":"Update","index":true,"icon":"upload","category":["Docs-MySQL"],"footer":false,"description":"Updating existing records in a MySQL table is accomplished using the \\"UPDATE\\" statement. Let's see how to perform record updates in Node.js: Updating Records with a Specific Con...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/docs/MySQL/Update.html"}],["meta",{"property":"og:site_name","content":"Node.js Docs"}],["meta",{"property":"og:title","content":"Update"}],["meta",{"property":"og:description","content":"Updating existing records in a MySQL table is accomplished using the \\"UPDATE\\" statement. Let's see how to perform record updates in Node.js: Updating Records with a Specific Con..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-17T15:29:22.000Z"}],["meta",{"property":"article:author","content":"Aahil"}],["meta",{"property":"article:modified_time","content":"2024-04-17T15:29:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Update\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-17T15:29:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aahil\\",\\"url\\":\\"https://linktr.ee/thecr3ator\\"}]}"]]},"headers":[{"level":3,"title":"Updating Records with a Specific Condition","slug":"updating-records-with-a-specific-condition","link":"#updating-records-with-a-specific-condition","children":[]},{"level":3,"title":"Understanding the Result Object","slug":"understanding-the-result-object","link":"#understanding-the-result-object","children":[]}],"git":{"createdTime":1713263632000,"updatedTime":1713367762000,"contributors":[{"name":"Aahil","email":"onyeanunaprince@gmail.com","commits":4}]},"readingTime":{"minutes":0.84,"words":251},"filePathRelative":"docs/MySQL/Update.md","localizedDate":"April 16, 2024","autoDesc":true}`);export{d as comp,k as data};
